apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.hiya.jacoco-android'

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

jacocoAndroidUnitTestReport {
    xml.enabled true
}

//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }


    compileSdkVersion compileSDK
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "com.picpay.desafio.android"
        minSdkVersion minSDK
        targetSdkVersion targetSDK
        versionCode versionCodeMajor * 10000 + versionCodeMinor * 100 + versionCodePatch
        versionName versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: true]
//            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            manifestPlaceholders = [crashlyticsEnabled: false]
            testCoverageEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    //Jetpack
    implementation appDependencies.appCompat
    implementation appDependencies.androidxKtx
    implementation appDependencies.constraintLayout
    implementation appDependencies.lifecycleViewModelKtx
    implementation appDependencies.lifecycleLiveDataKtx

    //Material
    implementation appDependencies.material

    //Memory leaks
    debugImplementation appDependencies.leakCanary

    // Koin
    implementation appDependencies.koinAndroid
    implementation appDependencies.koinAndroidViewModel

    api dataDependencies.gson

    //Test Libs
    testImplementation testDependencies.junit
    testImplementation testDependencies.robolectric
    testImplementation testDependencies.androidxJunit
    testImplementation testDependencies.espressoCore
    testImplementation testDependencies.runner
    testImplementation testDependencies.rules
    testImplementation testDependencies.googleTruth
    testImplementation testDependencies.archComponentTest
    testImplementation testDependencies.coroutinesTest
    testImplementation testDependencies.koinTest
    androidTestImplementation testDependencies.espressoCore
    androidTestImplementation testDependencies.runner
    androidTestImplementation testDependencies.rules
    androidTestImplementation testDependencies.androidxJunit
    androidTestImplementation testDependencies.androidxCoreTest
    androidTestImplementation testDependencies.mockWebServer
    androidTestImplementation testDependencies.espressoContrib
    androidTestImplementation testDependencies.espressoIntents
    androidTestImplementation testDependencies.koinTest
    implementation testDependencies.espressoIdlingResource
}
